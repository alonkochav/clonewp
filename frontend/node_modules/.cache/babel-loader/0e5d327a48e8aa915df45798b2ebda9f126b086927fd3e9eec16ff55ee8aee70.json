{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akrnuc\\\\code\\\\clonewp\\\\clonewp\\\\frontend\\\\src\\\\pages\\\\Posts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport postService from \"/../services/postService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const data = await postService.getAllPosts();\n        setPosts(data.data);\n      } catch (err) {\n        setError(\"Failed to fetch posts\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.title\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsPage, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useState","useEffect","postService","jsxDEV","_jsxDEV","PostsPage","_s","posts","setPosts","loading","setLoading","error","setError","fetchData","data","getAllPosts","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","id","_c","$RefreshReg$"],"sources":["C:/Users/akrnuc/code/clonewp/clonewp/frontend/src/pages/Posts.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport postService from \"/../services/postService\";\r\n\r\nconst PostsPage: React.FC = () => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await postService.getAllPosts();\r\n        setPosts(data.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch posts\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      {posts.map((post) => (\r\n        <div key={post.id}>{post.title}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,IAAI,GAAG,MAAMZ,WAAW,CAACa,WAAW,CAAC,CAAC;QAC5CP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZJ,QAAQ,CAAC,uBAAuB,CAAC;MACnC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIV,KAAK,EAAE,oBAAOP,OAAA;IAAAa,QAAA,GAAK,SAAO,EAACN,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACEjB,OAAA;IAAAa,QAAA,EACGV,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdnB,OAAA;MAAAa,QAAA,EAAoBM,IAAI,CAACC;IAAK,GAApBD,IAAI,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,SAAmB;AAAAqB,EAAA,GAAnBrB,SAAmB;AAgCzB,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}