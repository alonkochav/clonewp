{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akrnuc\\\\code\\\\clonewp\\\\clonewp\\\\frontend\\\\src\\\\context\\\\PostContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostContext = /*#__PURE__*/createContext(undefined);\nexport const PostProvider = ({\n  children\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState(null);\n  const fetchPosts = useCallBack(async () => {\n    // Here you would make an API call to fetch posts\n    const fetchedPosts = []; // Mock data or from API\n    setPosts(fetchedPosts);\n  }, []); // Empty array if no dependencies, otherwise list them\n\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      posts,\n      currentPost,\n      setCurrentPost,\n      fetchPosts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PostProvider, \"+xVU2u/65j9FfUXj7IihaNwEjk0=\", true);\n_c = PostProvider;\nexport const usePosts = () => {\n  _s2();\n  const context = useContext(PostContext);\n  if (context === undefined) {\n    throw new Error(\"usePosts must be used within a PostProvider\");\n  }\n  return context;\n};\n_s2(usePosts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","PostContext","undefined","PostProvider","children","_s","posts","setPosts","currentPost","setCurrentPost","fetchPosts","useCallBack","fetchedPosts","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePosts","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/akrnuc/code/clonewp/clonewp/frontend/src/context/PostContext.tsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useCallback,\r\n  ReactNode,\r\n} from \"react\";\r\n\r\ninterface PostContextType {\r\n  posts: Post[];\r\n  currentPost: Post | null;\r\n  setCurrentPost: (post: Post | null) => void;\r\n  fetchPosts: () => Promise<void>;\r\n}\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  // Add other post properties as needed\r\n}\r\n\r\nconst PostContext = createContext<PostContextType | undefined>(undefined);\r\n\r\nexport const PostProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [currentPost, setCurrentPost] = useState<Post | null>(null);\r\n\r\n  const fetchPosts = useCallBack(async () => {\r\n    // Here you would make an API call to fetch posts\r\n    const fetchedPosts: Post[] = []; // Mock data or from API\r\n    setPosts(fetchedPosts);\r\n  }, []); // Empty array if no dependencies, otherwise list them\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{ posts, currentPost, setCurrentPost, fetchPosts }}\r\n    >\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePosts = () => {\r\n  const context = useContext(PostContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"usePosts must be used within a PostProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,QAGH,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBf,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAC9DC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EAEjE,MAAMY,UAAU,GAAGC,WAAW,CAAC,YAAY;IACzC;IACA,MAAMC,YAAoB,GAAG,EAAE,CAAC,CAAC;IACjCL,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA,CAACC,WAAW,CAACY,QAAQ;IACnBC,KAAK,EAAE;MAAER,KAAK;MAAEE,WAAW;MAAEC,cAAc;MAAEC;IAAW,CAAE;IAAAN,QAAA,EAEzDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,EAAA,CAnBWF,YAA+C;AAAAgB,EAAA,GAA/ChB,YAA+C;AAqB5D,OAAO,MAAMiB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGzB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAIqB,OAAO,KAAKpB,SAAS,EAAE;IACzB,MAAM,IAAIqB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}